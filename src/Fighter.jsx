/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 fighter.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three';

export function Fighter() {
  const { nodes, materials } = useGLTF('/fighter.glb')
  const color = new THREE.Color();

  const material = new THREE.MeshStandardMaterial({
    color : new THREE.Color(0xFF00F0)
  })
  return (
    <group dispose={null} scale={0.04}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.fighter_1.geometry} material={material} />
        <mesh geometry={nodes.fighter_2.geometry} material={material} />
        <mesh geometry={nodes.fighter_3.geometry} material={material} />
        <mesh geometry={nodes.fighter_4.geometry} material={material} />
        <mesh geometry={nodes.fighter_5.geometry} material={material} />
        <mesh geometry={nodes.fighter_6.geometry} material={material} />
        <mesh position={[0,100,-30]} >
        <sphereGeometry args={[10, 8, 8]} />
        <meshStandardMaterial emissive="#ff0000" emissiveIntensity={5} toneMapped={false} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/fighter.glb')
